plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.neeis'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('jacocoReport')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.retry:spring-retry'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // FCM
    implementation 'com.google.firebase:firebase-admin:9.4.3'

    // Excel
    implementation 'org.apache.poi:poi:5.2.5'
    implementation 'org.apache.poi:poi-ooxml:5.2.5'

    // PDF
    implementation 'com.openhtmltopdf:openhtmltopdf-slf4j:1.0.10' // 로그용 (선택)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'com.itextpdf:layout:7.2.5'
    implementation 'com.itextpdf:kernel:7.2.5'
    implementation 'com.itextpdf:io:7.2.5'
    implementation 'com.itextpdf:font-asian:7.2.5' // 한글 폰트 지원
}


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy  jacocoTestReport
}

// jacoco Report 생성
jacocoTestReport {
    dependsOn test // test 종속성 추가

    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }

    def QDomainList = []
    for (qPattern in '**/QA'..'**/QZ') { // QClass 대응
        QDomainList.add(qPattern + '*')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/dto/**',
                    '**/global/common/**',
                    '**/*Application*',
                    '**/exception/**',
                    '**/config/**'
            ] + QDomainList)
        }))
    }

    finalizedBy 'jacocoTestCoverageVerification' // jacocoTestReport 태스크가 끝난 후 실
}

// jacoco Test 유효성 확인
jacocoTestCoverageVerification {
    def QDomainList = []
    for (qPattern in '*.QA'..'*.QZ') { // QClass 대응
        QDomainList.add(qPattern + '*')
    }

    violationRules {
        rule {
            enabled = true // 규칙 활성화 여부
            element = 'CLASS' // 커버리지를 체크할 단위 설정

            // 코드 커버리지를 측정할 때 사용되는 지표
            limit {
                // LINE : 한 줄씩 한번 이라도 실행되면 만족
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            excludes = [
                    '**.*Dto.**',
                    '**.*Application*',
                    '**.*Exception*.**',
                    '**.config.**',
            ] + QDomainList
        }
    }
}